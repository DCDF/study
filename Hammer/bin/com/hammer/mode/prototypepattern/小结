原型模式
	Cloneable接口无方法,为jvm虚拟机标识该对象是可被拷贝的
	clone为浅拷贝,java中偷懒,object对象的拷贝只拷贝本对象,对象内部引用的数据和引用对象都不拷贝直接指向原对象地址
	
base为原型模式通用源码

原型模式是在内存(堆内存)二进制流的拷贝,然后重新分配一个内存块,比直接new性能好得多(场景:循环中new对象时),构造函数不会执行(优点也是缺点)

a13_11浅拷贝测试,String类型特殊,没有clone对象,java希望在使用String时把它当做基础类型对待

a13_12深拷贝测试

深拷贝浅拷贝不要混合使用,分开实现
深拷贝另一种方式 通过写二进制流操作对象实现对象的拷贝(待实现)
要使用clone就不要在类成员变量上加final,final类型不允许重新赋值(编译时错误)

原型模式先产生一个包含大量共有信息的类,拷贝出副本修正细节,一个对象的产生可以不由零起步 (类似克隆人,不用1岁-2岁这样成长,直接复制)