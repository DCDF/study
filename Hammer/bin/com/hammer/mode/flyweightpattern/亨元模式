亨元模式
	使用共享对象可有效地支持大量的细粒度的对象
	
角色
	抽象亨元角色Flyweight:产品抽象类,同时定义出对象外部状态(例子中组合成的key值,不可共享)和内部状态(可共享,存储在亨元对象内部,就是基类定义的那些东西,不用存储在具体的某个对象上)
	具体亨元角色ConcreteFlyweight:实现抽象角色业务,注意内部状态变化不要与环境有关,也不能出现改变内部状态的时候会改变外部状态(就是不要去影响科目考试地点)
	不可共享的亨元角色unsharedConcreteFlyweight:不存在外部状态或者安全要求(线程安全)不能够使用共享技术的对象
	亨元工厂FlyweightFactory:构造池容器,提供从池中获取对象的方法