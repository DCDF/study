
只和朋友通讯:一个类只与朋友类交流(成员变量里的类或者参数传入的类)

朋友间也有距离:
	例:a5_2_2bad,wizard类把太多方法暴露给installsofrware,当修改其中一个方法的返回值时或造成installsofrware方法的修改,修改的风险扩散了,耦合关系太牢固,我们需要把wizard的三个方法封装
	a5_2_2better重构后,类耦合降低,结构清晰,变更风险降低
	为了保持朋友间的距离,设计时反复衡量是否可以再减少public方法和属性

是自己的就是自己的
	一个方法,放在本类可以,放在其他类也不错坚持一个原则:如果一个方法放在本类中,既不增加类间关系也不对本类产生负面影响,就放在本类

最佳实践
	核心观念:类间解耦,弱耦合,只有弱耦合后类的复用率才会提高,结果也可能导致产生大量的中转或跳转类,导致复杂性增加,使用时需要反复衡量
